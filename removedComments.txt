From cardProduct->
// const dispatch = useDispatch();
  // const [cartItems, setCartItems] = useState([]);

  // const cartInitialCount = useSelector(state => state.cart.initialCount);

  // useEffect(() => {
  //   // Update the initialCount state with the value from the Redux store
  //   setInitialCount(cartInitialCount);
  // }, [cartInitialCount]); // Run this effect whenever cartInitialCount changes

  // useEffect(() => {
  //   // const isProductInCart = cartItems.some(item => item.productId === productId);
  //   // console.log("this is item ", item.productId)
    
  //   // if (isProductInCart) {
  //   //   setInitialCount(initialCount + 1);
  //   // }
  // }, [cartItems, productId]); 
  
  // const handleAddToCart = async () => {
  //   try {
  //     dispatch(addToCart({ product_id: productId }, initialCount));
  //   } catch (error) {
  //     console.error('Error adding to cart:', error);
  //   }
  // };
  // useEffect(() => {
  //   // Update the count from the Redux store
  //   setInitialCount(initialCount);
  //   // console.log("in cart is ",initialCount+1);
  // }, [initialCount]);
  